{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/script.js","webpack:///./src/scss/style.scss"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA2C;;;;AAI3C;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C,iBAAiB,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qCAAqC;AAC7E,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,4CAA4C,kBAAkB;;AAE9D;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE;AACjE;;AAEA;AACA,2CAA2C,UAAU,QAAQ,OAAO;;;AAGpE;AACA;AACA,IAAI;AACJ,uCAAuC,UAAU,QAAQ,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,wBAAwB,6CAAS;;AAEjC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACtQD,uC","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import chartData from '../data/chart_data';\r\n\r\n\r\n\r\nclass Chart {\r\n\tconstructor(data){\r\n\t\tthis._lines = {};\r\n\r\n\t\tthis._x = this.createX(data.columns);\r\n\r\n\t\tthis.start = this.x[0];\r\n\r\n\t\tthis.end = this.x[this.x.length - 1];\r\n\r\n\t\tthis.parseData(data);\r\n\r\n\t\tthis.setRange();\r\n\t}\r\n\r\n\tsetRange(){\r\n\r\n\t}\r\n\r\n\tget x(){\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(coords){\r\n\t\tthis._x = coords;\r\n\t}\r\n\tget lines(){\r\n\t\treturn this._lines;\r\n\t}\r\n\r\n\tcreateLineCoords({id, name, color, coords}){\r\n\t\tthis._lines[`${id}`] = {\r\n\t\t\tname,\r\n\t\t\tcoords,\r\n\t\t\tcolor,\r\n\t\t\tactive: true\r\n\t\t}\r\n\t}\r\n\r\n\tcreateX(columns) {\r\n\t\tfor (let column of columns){\r\n\t\t\tif (column[0] === 'x'){\r\n\t\t\t\tcolumn.shift();\r\n\t\t\t\treturn column;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tgetCoordsFromColumns({key, columns}){\r\n\t\tfor(let column of columns){\r\n\t\t\tif (column[0] === key){\r\n\t\t\t\tcolumn.shift();\r\n\r\n\t\t\t\tconst coords = [];\r\n\r\n\t\t\t\tfor (let coord_index in this.x){\r\n\t\t\t\t\tcoords.push({\r\n\t\t\t\t\t\tx: this.x[coord_index],\r\n\t\t\t\t\t\ty: column[coord_index]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn column;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tparseData(data){\r\n\t\tfor (let columnId in data.types){\r\n\t\t\tif (data.types[columnId] === 'line'){\r\n\t\t\t\tthis.createLineCoords({\r\n\t\t\t\t\tid: columnId,\r\n\t\t\t\t\tname: data.names[columnId],\r\n\t\t\t\t\tcolor: data.colors[columnId],\r\n\t\t\t\t\tcoords: this.getCoordsFromColumns({key: columnId, columns: data.columns})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetChartMinMaxValueInRange(start, end){\r\n\r\n\t\tlet min = 99999999999999999;\r\n\t\tlet max = 0;\r\n\r\n\t\tif (this.activeLinesCount() === 0){\r\n\t\t\treturn {min: 0, max: 100};\r\n\t\t}\r\n\r\n\t\tfor (let coordIndex in this.x){\r\n\t\t\tif (this.x[coordIndex] >= start && this.x[coordIndex] <= end){\r\n\t\t\t\tfor (let lineIndex in this.lines){\r\n\t\t\t\t\tconst line = this.lines[lineIndex];\r\n\t\t\t\t\tif (line.active){\r\n\t\t\t\t\t\tmin = line.coords[coordIndex] < min ? line.coords[coordIndex] : min;\r\n\t\t\t\t\t\tmax = line.coords[coordIndex] > max ? line.coords[coordIndex] : max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {min, max};\r\n\t}\r\n\r\n\tactiveLinesCount(){\r\n\r\n\t\tlet count = 0;\r\n\r\n\t\tfor (let lineIndex in this.lines){\r\n\t\t\tcount += this.lines[lineIndex].active ? 1 : 0;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tdrawLines(target_id, start = this.start, end = this.end){\r\n\r\n\t\tconst target = document.getElementById(target_id);\r\n\r\n\t\tconst windowCoeff = target.clientHeight / target.clientWidth;\r\n\r\n\t\ttarget.setAttribute('viewBox', `0 0 100 ${100 * windowCoeff}`);\r\n\r\n\t\t// Disable zoom less than 100%\r\n\t\tstart = this.start > start ? this.start : start;\r\n\t\tend = this.end < end ? this.end : end;\r\n\r\n\t\tconst chartWidth = (end - start);\r\n\r\n\t\tconst chartValuesMinMax = this.getChartMinMaxValueInRange(start, end);\r\n\r\n\t\tconst chartHeight = (chartValuesMinMax.max - chartValuesMinMax.min);\r\n\r\n\t\tfor (let lineId in this.lines){\r\n\r\n\t\t\tlet pathLine = '';\r\n\r\n\t\t\tconst yCoords = this.lines[lineId].coords;\r\n\r\n\t\t\tfor (let coordIndex in this.x){\r\n\t\t\t\tcoordIndex = Number(coordIndex);\r\n\t\t\t\tlet x = this.x[coordIndex];\r\n\t\t\t\tlet y = yCoords[coordIndex];\r\n\t\t\t\tx = (1 -((end - x) / chartWidth)) * 100;\r\n\t\t\t\ty = ((((chartHeight - y) / chartHeight) * 80) + 15) * windowCoeff;\r\n\t\t\t\tpathLine += (coordIndex === 0) ? `M${x} ${y}` : ` L ${x} ${y}`;\r\n\t\t\t}\r\n\r\n\t\t\tlet path = document.createElementNS('http://www.w3.org/2000/svg','path');\r\n\t\t\tconst line = document.getElementById(`${target_id}-line-${lineId}`);\r\n\r\n\r\n\t\t\tif (line !== null){\r\n\t\t\t\tpath = line;\r\n\t\t\t}else{\r\n\t\t\t\tpath.setAttributeNS(null, 'id', `${target_id}-line-${lineId}`);\r\n\t\t\t\tpath.setAttributeNS(null, 'stroke', this.lines[lineId].color);\r\n\t\t\t\tpath.setAttributeNS(null, 'stroke-width', .2);\r\n\t\t\t\tpath.setAttributeNS(null, 'fill', 'none');\r\n\t\t\t\ttarget.appendChild(path);\r\n\t\t\t}\r\n\t\t\tpath.setAttributeNS(null, 'd', pathLine);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst chart = new Chart(chartData[0]);\r\n\r\nchart.drawLines('draw-target');\r\nchart.drawLines('draw-range');\r\n\r\ndocument.getElementById('disable1').addEventListener('click', (event) => {\r\n\r\n\tconst that = event.target;\r\n\r\n\tif (that.dataset.show === 'false'){\r\n\t\tchart._lines.y0.active = false;\r\n\t\tdocument.getElementById('line-y0').style.opacity = 0;\r\n\t\tthat.dataset.show = 'true';\r\n\t\tthat.innerHTML = 'enable1';\r\n\t}else{\r\n\t\tchart._lines.y0.active = true;\r\n\t\tdocument.getElementById('line-y0').style.opacity = 1;\r\n\t\tthat.dataset.show = 'false';\r\n\t\tthat.innerHTML = 'disable1';\r\n\t}\r\n\tchart.drawLines('draw-target');\r\n\r\n});\r\ndocument.getElementById('disable2').addEventListener('click', (event) => {\r\n\tconst that = event.target;\r\n\tif (that.dataset.show === 'false'){\r\n\t\tchart._lines.y1.active = false;\r\n\t\tdocument.getElementById('line-y1').style.opacity = 0;\r\n\t\tthat.dataset.show = 'true';\r\n\t\tthat.innerHTML = 'enable2';\r\n\t}else{\r\n\t\tchart._lines.y1.active = true;\r\n\t\tdocument.getElementById('line-y1').style.opacity = 1;\r\n\t\tthat.dataset.show = 'false';\r\n\t\tthat.innerHTML = 'disable2';\r\n\t}\r\n\tchart.drawLines('draw-target');\r\n});\r\n\r\nconst chartStart = document.getElementById('chart-start');\r\nconst chartEnd = document.getElementById('chart-end');\r\nconst chartControls = document.getElementById('chart-controls');\r\n\r\nlet chartStartClicked = false;\r\nlet chartEndClicked = false;\r\nlet startClickedPosition, startLeftOffset, endClickedPosition, endRightOffset, startPosition, endPosition;\r\n\r\n\r\n\r\nchartStart.addEventListener('mousedown', (event) => {\r\n\tstartClickedPosition = event.clientX;\r\n\tstartLeftOffset = chartStart.getBoundingClientRect().left - chartControls.getBoundingClientRect().left;\r\n\tendPosition = chartEnd.getBoundingClientRect().left - chartControls.getBoundingClientRect().left - 100;\r\n\tchartStartClicked = true;\r\n\tdocument.getElementById('draw-target').classList.add('dragging');\r\n});\r\nchartEnd.addEventListener('mousedown', (event) => {\r\n\tendClickedPosition = event.clientX;\r\n\tendRightOffset = chartControls.getBoundingClientRect().right - chartEnd.getBoundingClientRect().right;\r\n\tstartPosition = chartControls.getBoundingClientRect().right - chartStart.getBoundingClientRect().right - 100;\r\n\tchartEndClicked = true;\r\n\tdocument.getElementById('draw-target').classList.add('dragging');\r\n});\r\n\r\ndocument.addEventListener('mousemove', (event) => {\r\n\tif (chartStartClicked){\r\n\t\tlet offsetLeft = event.clientX - startClickedPosition;\r\n\t\tlet left = startLeftOffset + offsetLeft;\r\n\t\tleft = left >= 0 ? left : 0;\r\n\t\tleft = left <= endPosition ? left : endPosition;\r\n\t\tchartStart.style.left = `${left}px`;\r\n\t\tchartStart.dataset.value = (chart.start + ((left / chartControls.clientWidth) * (chart.end - chart.start)));\r\n\t\tchart.drawLines('draw-target', chartStart.dataset.value, chartEnd.dataset.value);\r\n\t}\r\n\tif (chartEndClicked){\r\n\t\tlet offsetRight = 1 - (event.clientX - endClickedPosition);\r\n\t\tlet right = endRightOffset + offsetRight;\r\n\t\tright = right >= 0 ? right : 0;\r\n\t\tright = right <= startPosition ? right : startPosition;\r\n\t\tchartEnd.style.right = `${right}px`;\r\n\t\tchartEnd.dataset.value = (chart.end - ((right / chartControls.clientWidth) * (chart.end - chart.start)));\r\n\t\tchart.drawLines('draw-target', chartStart.dataset.value, chartEnd.dataset.value);\r\n\t}\r\n});\r\ndocument.addEventListener('mouseup', () => {\r\n\tchartStartClicked = false;\r\n\tchartEndClicked = false;\r\n\tdocument.getElementById('draw-target').classList.remove('dragging')\r\n});","// extracted by mini-css-extract-plugin"],"sourceRoot":""}