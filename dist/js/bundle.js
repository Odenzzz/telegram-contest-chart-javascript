!function(t){var e={};function i(s){if(e[s])return e[s].exports;var a=e[s]={i:s,l:!1,exports:{}};return t[s].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(s,a,function(e){return t[e]}.bind(null,a));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){i(2),t.exports=i(1)},function(t,e,i){},function(t,e,i){"use strict";i.r(e);class s{constructor(t){this.settings={viewBoxWidth:100,nightMode:{background:"#242f3e",tooltipBackground:"#253241",tooltipColor:"#ffffff",tooltipLineColor:"#3b4a5a",valueLineColor:"#293544",textColor:"#546778",startEndColor:"rgba(112, 149, 185, 0.5)",mapNotVisibleBackground:"rgba(16, 25, 37, 0.5)"},dayMode:{background:"#ffffff",tooltipBackground:"#ffffff",tooltipColor:"#222222",tooltipLineColor:"#dfe6eb",valueLineColor:"#f2f4f5",textColor:"#96a2aa",startEndColor:"rgba(183, 207, 223, 0.5)",mapNotVisibleBackground:"rgba(221, 234, 241, 0.5)"},monthNames:["Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov"],weekdaysNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],mapSliderWidth:.03,decimalsInThousandRounding:2,fontSize:13,currentMode:"day",chartLineWidth:3,valueLineWidth:1,tooltipCircleLineWidth:2,tooltipOffsetFromCursor:15,tooltipLineWidth:2,tooltipCirclesRadius:5,chartHeight:.93,minMapSpace:15},this.lines={},this.totalValues=[],this.x=this.parseX(t.columns),this.totalStart=this.x[0],this.totalEnd=this.x[this.x.length-1],this.parseData(t)}get activeLinesCount(){let t=0;for(let e in this.lines)t+=this.lines[e].active?1:0;return t}parseX(t){for(let e of t)if("x"===e[0])return e.shift(),e}createLineCoords({id:t,name:e,color:i,coords:s}){this.lines[`${t}`]={name:e,coords:s,color:i,active:!0}}getCoordsFromColumns({key:t,columns:e}){for(let i of e)if(i[0]===t)return i.shift(),this.totalValues.push(...i),i}parseData(t){for(let e in t.types)"line"===t.types[e]&&this.createLineCoords({id:e,name:t.names[e],color:t.colors[e],coords:this.getCoordsFromColumns({key:e,columns:t.columns})});this.totalValues=this.totalValues.filter((t,e,i)=>i.indexOf(t)===e),this.totalValues.sort((t,e)=>t-e)}}class a{constructor(){}createSVGItem(t,e,i){const s=document.createElementNS("http://www.w3.org/2000/svg",e);for(const t in i)s.setAttributeNS(null,t,i[t]);return t.appendChild(s),s}animateItem(t,e,i,s,a){const o=s-i;this.animate(function(s){if(t.classList.contains("active-item")){const r=i+o*(s/a);t.setAttribute(e,parseFloat(Number(r).toFixed(9)))}},a)}animate(t,e){var i=performance.now();requestAnimationFrame(function s(a){var o=a-i;o>e&&(o=e),t(o),o<e&&requestAnimationFrame(s)})}}class o{constructor({appendTarget:t=body,settings:e}){this.drawier=new a,this.layoutID=`chart-layout-${Math.floor(1e5*Math.random())}`,this.mainAppendTarget=document.querySelector(t),this.layoutContorls={},this.settings=e,this.elements={},this.cache={}}get chartTemplate(){return`\n\t\t\t<div class="chart" id="${this.layoutID}">\n\t\t\t\t<div class="chart__window">\n\t\t\t\t\t<svg></svg>\n\t\t\t\t</div>\n\t\t\t\t<div class="chart__map">\n\t\t\t\t\t<svg></svg>\n\t\t\t\t</div>\n\t\t\t\t<div class="chart__buttons"></div>\n\t\t\t</div>\n\t\t`}get viewBoxWidth(){return this.settings.viewBoxWidth}get viewBoxHeight(){return this.settings.viewBoxWidth/this.chartAspectRatio}get chartSizeCoeff(){return this.viewBoxWidth/this.elements.chartWrapper.clientWidth}get currentColorScheme(){const t=this.settings.currentMode;return this.settings[`${t}Mode`]}get mapSliderWidth(){return this.settings.mapSliderWidth}get startChartValue(){return this.layoutContorls.startChartSlider.x.baseVal.value}set startChartValue(t){this.layoutContorls.startChartSlider.x.baseVal.value=t}get startChartWidth(){return this.layoutContorls.startChartSlider.width.baseVal.value}get endChartValue(){return this.layoutContorls.endChartSlider.x.baseVal.value}set endChartValue(t){this.layoutContorls.endChartSlider.x.baseVal.value=t}get endChartWidth(){return this.layoutContorls.endChartSlider.width.baseVal.value}get viewRangeWidth(){return this.endChartValue-this.startChartValue}get chartAspectRatio(){return this.elements.chartWrapper.clientWidth/this.elements.chartWrapper.clientHeight}get mapAspectRatio(){return this.elements.mapWrapper.clientWidth/this.elements.mapWrapper.clientHeight}init(){this.elements.layout=this.initLayout(),this.elements.chartWrapper=this.elements.layout.querySelector(".chart__window"),this.elements.mapWrapper=this.elements.layout.querySelector(".chart__map"),this.elements.buttonsWrapper=this.elements.layout.querySelector(".chart__buttons"),this.elements.chart=this.initChart(),this.elements.map=this.initMap(),this.setCurrentColorScheme()}initLayout(){const t=document.createElement("div");return t.classList.add("chart_wrapper"),t.innerHTML=this.chartTemplate,this.mainAppendTarget.append(t),t}initChart(){const t=this.elements.chartWrapper.querySelector("svg");return t.setAttribute("viewBox",`0 0 ${this.viewBoxWidth} ${this.viewBoxWidth/this.chartAspectRatio}`),this.drawier.createSVGItem(t,"g",{class:"value-lines-wrapper"}),this.drawier.createSVGItem(t,"g",{class:"chart-wrapper"}),this.drawier.createSVGItem(t,"g",{class:"tooltip-wrapper"}),this.drawier.createSVGItem(t,"g",{class:"dates-wrapper"}),this.drawier.createSVGItem(t,"g",{class:"values-wrapper"}),t}initMap(){const t=this.elements.mapWrapper.querySelector("svg");return t.setAttribute("viewBox",`0 0 ${this.viewBoxWidth} ${this.viewBoxWidth/this.mapAspectRatio}`),this.drawier.createSVGItem(t,"g",{class:"chart-wrapper"}),this.layoutContorls.viewRange=this.createMapViewRange(t),this.layoutContorls.startChartSlider=this.createSlider(t),this.layoutContorls.startChartSlider.setAttributeNS(null,"x",0),this.layoutContorls.startMapBackground=this.createMapBackground(t),this.layoutContorls.startMapBackground.setAttributeNS(null,"x",0),this.layoutContorls.endChartSlider=this.createSlider(t),this.layoutContorls.endChartSlider.setAttributeNS(null,"x",this.viewBoxWidth-this.endChartWidth),this.layoutContorls.endMapBackground=this.createMapBackground(t),this.layoutContorls.endMapBackground.setAttributeNS(null,"x",this.viewBoxWidth),this.changeMapViewSize(),t}initControlButtons(t){const e=[];for(let i in t){const s=document.createElement("button");s.setAttribute("class","chart-control-button active"),s.style.color=this.currentColorScheme.tooltipColor,s.style.borderColor=this.currentColorScheme.tooltipLineColor,s.innerHTML=`<span style="border-color:${t[i].color}"><div class="background" style="background: ${t[i].color}"></div><i>âœ”</i></span> ${t[i].name}`,s.dataset.lineid=i,this.elements.buttonsWrapper.appendChild(s),e.push(s)}this.elements.buttons=e}createLines({target:t,x:e,lines:i,start:s,end:a,min:o,max:r}){for(let n in i){let l="";const h=i[n].coords;for(let i in e){i=Number(i);const n=this.xValueToCoord(e[i],s,a),c=this.yValueToCoord(h[i],o,r,t);l+=0===i?`M${n} ${c}`:` L ${n} ${c}`}let c=t.querySelector(`.line-${n}`);if(null===c){const e={class:`line-${n}`,stroke:i[n].color,"stroke-width":this.chartSizeCoeff*this.settings.chartLineWidth,fill:"none"};c=this.drawier.createSVGItem(t.querySelector(".chart-wrapper"),"path",e)}c.setAttributeNS(null,"d",l)}}createDates({target:t,dates:e,start:i,end:s,totalStartDate:a,totalEndDate:o}){for(const r of e){let e=this.xValueToCoord(r,i,s),n=t.querySelector(`.date-${r}`);if(null===n){const e={y:this.viewBoxHeight-.05*this.viewBoxHeight,"font-size":this.chartSizeCoeff*this.settings.fontSize,class:`date-text date-${r} removing-item`,color:this.currentColorScheme.textColor,fill:this.currentColorScheme.textColor};n=this.drawier.createSVGItem(t.querySelector(".dates-wrapper"),"text",e);const i=new Date(r);n.innerHTML=`${this.settings.monthNames[i.getMonth()]} ${i.getDate()}`,n.setAttribute("y",this.viewBoxHeight)}n.setAttribute("x",0),r===a?e+=Math.ceil(.1*n.clientWidth):e-=r===o?Math.ceil(1.1*n.clientWidth):Math.floor(n.clientWidth/2),n.setAttribute("x",e),n.setAttributeNS(null,"class",`date-${r} date-text active-item`)}}createValues({target:t,steps:e,min:i,max:s}){for(const a of e){let e;const o=this.yValueToCoord(a,i,s,t);e=void 0!==this.cache.oldMin?this.yValueToCoord(a,this.cache.oldMin,this.cache.oldMax,t):o;let r=t.querySelector(`.value-${a}-text`),n=t.querySelector(`.value-${a}-value`);if(null===n){const i={stroke:this.currentColorScheme.valueLineColor,"stroke-width":this.chartSizeCoeff*this.settings.valueLineWidth,fill:"none",class:"removing-item",d:`M0 ${e} L ${this.viewBoxWidth} ${e}`};n=this.drawier.createSVGItem(t.querySelector(".value-lines-wrapper"),"path",i)}if(n.setAttribute("class",`value-item active-item value-${a} value-${a}-value`),n.setAttributeNS(null,"d",`M0 ${o} L ${this.viewBoxWidth} ${o}`),null===r){const i={x:0,"font-size":this.chartSizeCoeff*this.settings.fontSize,color:this.currentColorScheme.textColor,fill:this.currentColorScheme.textColor,class:"removing-item",y:e};r=this.drawier.createSVGItem(t.querySelector(".values-wrapper"),"text",i)}r.dataset.y=a,n.dataset.y=a,r.innerHTML=this.numberFormat(a),r.setAttribute("class",`value-item active-item value-${a} value-${a}-text`);let l=Number(r.getAttribute("y"));const h=o-.01*t.viewBox.baseVal.height;if(null!==l)if(l!==h){let e=400;t.classList.contains("dragging")&&(e=100),this.drawier.animateItem(r,"y",l,h,e)}else r.setAttribute("y",h);else r.setAttribute("y",h)}this.cache.oldMin=i,this.cache.oldMax=s}createTooltip({x:t,values:e,clientY:i,start:s,end:a,min:o,max:r}){const n=this.elements.chartWrapper,l=this.xValueToCoord(t,s,a);let h=n.querySelector(`.tooltip-${t}`),c="",d=document.querySelector(`#tooltip-text-${t}`);if(null===h){this.removeItems("tooltip-item",`tooltip-${t}`);const i=new Date(t),s={stroke:this.currentColorScheme.tooltipLineColor,"stroke-width":this.chartSizeCoeff*this.settings.tooltipLineWidth,fill:"none",class:`tooltip-${t} tooltip-item`,d:`M${l} 0 L ${l} ${this.viewBoxHeight}`};h=this.drawier.createSVGItem(n.querySelector(".tooltip-wrapper"),"path",s),c+=`<span class="tooltip-date">${this.settings.weekdaysNames[i.getDay()]}, ${this.settings.monthNames[i.getMonth()]} ${i.getDate()}</span>`,c+='<div class="tooltip-values-wrapper">';for(const i of e){let e=n.querySelector(`.tooltip-value-${i.y}`);const s=this.yValueToCoord(i.y,o,r,n);if(null===e){const s={stroke:i.color,"stroke-width":this.chartSizeCoeff*this.settings.tooltipCircleLineWidth,fill:this.currentColorScheme.background,r:this.chartSizeCoeff*this.settings.tooltipCirclesRadius,class:`tooltip-${t} tooltip-value-${i.y} tooltip-item`};e=this.drawier.createSVGItem(n.querySelector(".tooltip-wrapper"),"circle",s)}e.setAttributeNS(null,"cx",l),e.setAttributeNS(null,"cy",s),c+=`<div class="tooltip-value-wrapper" style="color: ${i.color}">\n\t\t\t\t\t<span class="tooltip-value">${this.numberFormat([i.y])}</span>\n\t\t\t\t\t<span class="tooltip-value-name">${i.name}</span>\n\t\t\t\t</div>`}c+="</div>",null===d&&((d=document.createElement("div")).setAttribute("class",`tooltip-text tooltip-${t} tooltip-item`),d.setAttribute("id",`tooltip-text-${t}`),this.elements.chartWrapper.appendChild(d)),d.innerHTML=c,d.style.background=this.currentColorScheme.tooltipBackground,d.style.color=this.currentColorScheme.tooltipColor}const u=this.elements.chart.getBoundingClientRect(),m=d.getBoundingClientRect(),p=h.getBoundingClientRect(),g=i-u.top;let v=p.left-u.left-m.width/2,C=g-(m.height+this.settings.tooltipOffsetFromCursor);v<0&&(v=p.left-u.left+this.settings.tooltipOffsetFromCursor,C=g-m.height/2),v+m.width>u.width&&(v=p.left-u.left-(m.width+this.settings.tooltipOffsetFromCursor),C=g-m.height/2),C<0&&(C=g+this.settings.tooltipOffsetFromCursor),C+m.height>u.height-u.height*(1-this.settings.chartHeight)&&(C=g-(m.height+this.settings.tooltipOffsetFromCursor)),d.style.top=`${C}px`,d.style.left=`${v}px`}createSlider(t){const e={y:0,width:t.viewBox.baseVal.width*this.mapSliderWidth,height:t.viewBox.baseVal.height,fill:"rgba(0,0,0,0)"};return this.drawier.createSVGItem(t,"rect",e)}createMapBackground(t){const e={y:0,width:0,height:t.viewBox.baseVal.height,fill:this.currentColorScheme.mapNotVisibleBackground};return this.drawier.createSVGItem(t,"rect",e)}createMapViewRange(t){const e={x:0,y:0-t.viewBox.baseVal.height*this.mapSliderWidth,width:0,height:t.viewBox.baseVal.height+t.viewBox.baseVal.height*(2*this.mapSliderWidth),fill:"rgba(0,0,0,0)",stroke:this.currentColorScheme.startEndColor,"stroke-width":this.viewBoxWidth*this.mapSliderWidth};return this.drawier.createSVGItem(t,"rect",e)}setCurrentColorScheme(){if(this.elements.layout.classList.add("scheme-change"),document.querySelector("body").style.background=this.currentColorScheme.background,this.elements.map.style.background=this.currentColorScheme.background,this.elements.chart.style.background=this.currentColorScheme.background,this.layoutContorls.viewRange.setAttributeNS(null,"stroke",this.currentColorScheme.startEndColor),this.layoutContorls.endMapBackground.setAttributeNS(null,"fill",this.currentColorScheme.mapNotVisibleBackground),this.layoutContorls.startMapBackground.setAttributeNS(null,"fill",this.currentColorScheme.mapNotVisibleBackground),this.elements.buttons)for(const t of this.elements.buttons)t.style.color=this.currentColorScheme.tooltipColor,t.style.borderColor=this.currentColorScheme.tooltipLineColor;const t=[...this.elements.layout.querySelector(".dates-wrapper").querySelectorAll("text"),...this.elements.layout.querySelector(".values-wrapper").querySelectorAll("text")];for(const e of t)e.setAttributeNS(null,"color",this.currentColorScheme.textColor),e.setAttributeNS(null,"fill",this.currentColorScheme.textColor);const e=this.elements.layout.querySelector(".value-lines-wrapper").querySelectorAll("path");for(const t of e)t.setAttributeNS(null,"stroke",this.currentColorScheme.valueLineColor);setTimeout(()=>this.elements.layout.classList.remove("scheme-change"),0)}changeStartPosition(t,e){const i=this.endChartValue+this.endChartWidth-e;t=(t=t>0?t:0)<i?t:i,this.startChartValue=t,this.layoutContorls.startMapBackground.setAttributeNS(null,"width",this.startChartValue),this.changeMapViewSize()}changeEndPosition(t,e){const i=this.startChartValue+e-this.endChartWidth;t=(t=t>i?t:i)+this.endChartWidth<this.viewBoxWidth?t:this.viewBoxWidth-this.endChartWidth,this.endChartValue=t,this.layoutContorls.endMapBackground.setAttributeNS(null,"width",this.viewBoxWidth-this.endChartValue+this.endChartWidth),this.layoutContorls.endMapBackground.setAttributeNS(null,"x",this.endChartValue+this.endChartWidth),this.changeMapViewSize()}changeMapViewSize(){const t=this.startChartValue+this.viewBoxWidth*(this.mapSliderWidth/2),e=this.viewRangeWidth;this.layoutContorls.viewRange.setAttributeNS(null,"x",t),this.layoutContorls.viewRange.setAttributeNS(null,"width",e)}addNoDataPlaceholder(){let t=this.elements.layout.querySelector(".no-data-placeholder");null===t&&((t=document.createElement("div")).setAttribute("class","no-data-placeholder"),t.innerHTML="<h2>No data to display!</h2>",t.style.color=this.currentColorScheme.textColor,this.elements.layout.querySelector(".chart__window").appendChild(t))}removeItems(t,e="id-of-item-to-not-remove",i="remove",s={}){let a=[];"string"==typeof e?a.push(e):Array.isArray(e)?a=e:reject("Wrong value of Drawing ID");let o=this.elements.layout.getElementsByClassName(t);return!!this.removeItem(o,a,o.length,i,s)}removeItem(t,e,i,s,a={}){for(const o of t){let t=0;for(const i of e)t+=o.classList.contains(i)?1:0;if(0===t){switch(s){case"remove":o.remove();break;case"hide":o.classList.remove("active-item"),o.classList.add("removing-item");break;case"hideByY":const t=this.yValueToCoord(Number(o.dataset.y),a.min,a.max,this.elements.chart),e=this.yValueToCoord(Number(o.dataset.y),this.cache.oldMin,this.cache.oldMax,this.elements.chart);let i=400;this.elements.chart.classList.contains("dragging")&&(i=100),this.drawier.animateItem(o,"y",e,t,i),o.classList.add("removing-item")}i--}else i--}return 0===i||this.removeItem(t,e,i,s,a)}numberFormat(t){const e=this.settings.decimalsInThousandRounding;return Math.abs(Number(t))>=1e9?parseFloat(Number(Math.abs(Number(t))/1e9).toFixed(e))+"B":Math.abs(Number(t))>=1e6?parseFloat(Number(Math.abs(Number(t))/1e6).toFixed(e))+"M":Math.abs(Number(t))>=1e3?parseFloat(Number(Math.abs(Number(t))/1e3).toFixed(e))+"K":Math.abs(Number(t))}xValueToCoord(t,e,i){return(1-(i-t)/(i-e))*this.viewBoxWidth}yValueToCoord(t,e,i,s){return(i-e-(t-e))/(i-e)*(this.viewBoxWidth*this.settings.chartHeight)/(s.getBoundingClientRect().width/s.getBoundingClientRect().height)}}class r{constructor(t){this.data=new s(t),this.view=new o({appendTarget:"body",settings:this.data.settings}),this.displayedDates=[],this.displayedValues=[],this.controlsState={startClicked:!1,endClicked:!1,mapRangeClicked:!1,chartMove:!1,chartReverceMove:!1,startPosition:0,endPosition:this.viewBoxWidth,clickInitialPosition:0,minMapViewRange:this.data.settings.minMapSpace},this.main()}get viewBoxWidth(){return this.data.settings.viewBoxWidth}get chartSizeCoeff(){return this.viewBoxWidth/this.view.elements.chartWrapper.clientWidth}get currentStart(){return this.view.startChartValue}get currentEnd(){return this.view.endChartValue+this.view.endChartWidth}get absoluteMinMax(){const t=this.data.totalValues.slice().shift(),e=this.data.totalValues.slice().pop(),i=e-t;let s=t-.05*i,a=Math.round(e+.05*i);return((s=Math.round(s/this.getOOM(s))*this.getOOM(s))>0&&s+.05*i<0||s<0&&s-.05*i<0)&&(s=0),{min:s,max:a}}get stepOfValues(){const t=this.getChartMinMaxValueInRange(this.getStartAbsoluteValue(this.currentStart),this.getEndAbsoluteValue(this.currentEnd)),e=Math.floor(this.view.elements.chartWrapper.clientHeight/60);let i=t.max-this.absoluteMinMax.min,s=i/e,a=Math.ceil(s/this.getOOM(s))*this.getOOM(s);const o=a-this.absoluteMinMax.min>t.min?this.absoluteMinMax.min:t.min;return o!==this.absoluteMinMax.min&&(s=(i=t.max-t.min)/e,a=Math.ceil(s/this.getOOM(s))*this.getOOM(s)),{min:o,step:a}}getChartMinMaxValueInRange(t,e){let i=1e17,s=0;if(0===this.data.activeLinesCount)return this.absoluteMinMax;for(let a in this.data.x)if(this.data.x[a]>=t&&this.data.x[a]<=e)for(let t in this.data.lines){const e=this.data.lines[t];e.active&&(i=e.coords[a]<i?e.coords[a]:i,s=e.coords[a]>s?e.coords[a]:s)}else for(let t in this.data.lines){const e=this.data.lines[t];e.active&&(i=e.coords[a]<i?e.coords[a]:i)}const a=s-i;return s+=Math.round(.05*a),i>0&&i-.05*a<0&&(i=0),{min:i=Math.round(i/this.getOOM(i))*this.getOOM(i),max:s}}getCoordsByIndex(t){const e={x:this.data.x[t],values:[]};for(const i in this.data.lines)this.data.lines[i].active&&e.values.push({y:this.data.lines[i].coords[t],color:this.data.lines[i].color,name:this.data.lines[i].name});return e.values.length>0&&e}getCoordIndexByClientX(t){const e=this.view.elements.chartWrapper,i=e.querySelector(".chart-wrapper").getBoundingClientRect().width/e.clientWidth,s=this.viewBoxWidth*(i*this.controlsState.startPosition/this.viewBoxWidth),a=this.viewBoxWidth*i,o=a/this.data.x.length,r=s+(t-e.getBoundingClientRect().left)/e.clientWidth*this.viewBoxWidth,n=(a/2-r)/a*o,l=r/this.viewBoxWidth/i;return Math.floor(this.data.x.length*l+n/i)}getStartAbsoluteValue(t){return this.data.totalStart+(this.data.totalEnd-this.data.totalStart)*(t/this.viewBoxWidth)}getEndAbsoluteValue(t){return this.data.totalEnd-(this.data.totalEnd-this.data.totalStart)*(1-t/this.viewBoxWidth)}getOOM(t){if(Math.abs(t)>0){const e=Math.floor(Math.log(Math.abs(t))/Math.LN10+1e-9);return Math.pow(10,e)}return 1}main(){this.view.init(),this.updateLines({target:this.view.elements.chart,drawValues:!0}),this.updateLines({target:this.view.elements.map}),this.view.initControlButtons(this.data.lines),this.setEventListeners()}setEventListeners(){this.buttonsListeners(),this.dragStartListeners(),this.dragEndListeners(),this.moveListeners()}updateLines({target:t,startPercent:e=0,endPercent:i=this.data.settings.viewBoxWidth,drawValues:s=!1}){let a=this.getStartAbsoluteValue(e),o=this.getEndAbsoluteValue(i);a=this.totalStart>a?this.totalStart:a,o=this.totalEnd<o?this.totalEnd:o;const r=this.getChartMinMaxValueInRange(a,o);this.view.createLines({target:t,x:this.data.x,lines:this.data.lines,start:a,end:o,min:this.stepOfValues.min,max:r.max}),s&&setTimeout(()=>{this.updateDates(t,a,o),this.updateValues(t,r)},0),this.data.activeLinesCount>0?this.updateChartData(!0):this.updateChartData(!1)}updateValues(t,e){if(this.data.activeLinesCount>0){const i=this.stepOfValues.step,s=this.stepOfValues.min,a=this.absoluteMinMax.max-s,o=Math.floor(a/i),r=[],n=[];for(let t=0;t<=o;t++){const e=i*t+s;r.push(e),n.push(`value-${e}`)}this.view.removeItems("value-item",n,"hideByY",{min:s,max:e.max}),this.view.createValues({target:t,steps:r,min:s,max:e.max})}else this.view.removeItems("value-item",[],"hide")}updateDates(t,e,i){if(this.data.activeLinesCount>0){const s=this.data.x.slice();let a=s.shift(),o=s.pop();const r=Math.floor((o-a)*(this.chartSizeCoeff/4));a+=r,o-=r;const n=Math.floor(t.getBoundingClientRect().width/80),l=t.querySelector(".chart-wrapper").getBoundingClientRect().width>0?t.querySelector(".chart-wrapper").getBoundingClientRect().width:this.view.elements.chartWrapper.clientWidth;let h=Math.floor(l/t.getBoundingClientRect().width*1.1);const c=n*(h=Math.pow(2,Math.floor(Math.log2(h))));let d=Math.floor((o-a)/c);if(!this.controlsState.mapRangeClicked){this.displayedDates=[];const t=[];for(let e=0;e<=c;e++){const i=864e5*Math.floor((Number(a)+d*e)/864e5);t.push(`date-${i}`),this.displayedDates.push(i)}r>d&&(t.push(`date-${a-r}`),this.displayedDates.push(a-r),t.push(`date-${o+r}`),this.displayedDates.push(o+r)),this.view.removeItems("date-text",t,"hide")}this.view.createDates({target:t,dates:this.displayedDates,start:e,end:i,totalStartDate:this.data.totalStart,totalEndDate:this.data.totalEnd})}else this.view.removeItems("date-text",[],"hide")}updateTooltip(t){let e=this.getStartAbsoluteValue(this.currentStart),i=this.getEndAbsoluteValue(this.currentEnd);const s=this.getChartMinMaxValueInRange(e,i),a=this.getCoordIndexByClientX(t.clientX||t.touches[0].clientX),o=this.getCoordsByIndex(a);o.x&&this.view.createTooltip({x:o.x,values:o.values,clientY:t.clientY||t.touches[0].clientY,start:e,end:i,min:this.stepOfValues.min,max:s.max})}updateChartData(t){t?this.view.removeItems("no-data-placeholder"):(this.view.removeItems("tooltip-item"),this.view.addNoDataPlaceholder())}updateSettings(){this.view.settings=this.data.settings,this.view.setCurrentColorScheme()}moveChart(t){const e=t.clientX||t.touches[0].clientX;if(this.controlsState.startClicked||this.controlsState.mapRangeClicked){const t=this.controlsState.startPosition+(0-(this.controlsState.clickInitialPosition-e)/this.view.elements.layout.clientWidth)*this.viewBoxWidth;this.view.changeStartPosition(t,this.controlsState.minMapViewRange)}if(this.controlsState.endClicked||this.controlsState.mapRangeClicked){const t=this.controlsState.endPosition+(0-(this.controlsState.clickInitialPosition-e)/this.view.elements.layout.clientWidth)*this.viewBoxWidth;this.view.changeEndPosition(t,this.controlsState.minMapViewRange)}if(this.controlsState.chartMove){this.view.removeItems("tooltip-item");const t=this.currentStart,e=this.currentEnd;this.view.elements.chart.classList.add("dragging"),this.updateLines({target:this.view.elements.chart,startPercent:t,endPercent:e,drawValues:!0}),setTimeout(()=>{this.view.elements.chart.classList.remove("dragging")},0)}}buttonsListeners(){for(const t of this.view.elements.buttons)t.addEventListener("click",()=>{const e=t.dataset.lineid,i=this.view.elements.layout.getElementsByClassName(`line-${e}`);if(this.data.lines[e].active){t.classList.remove("active"),this.view.removeItems("tooltip-item"),this.data.lines[e].active=!1;for(const t of i)t.style.opacity=0}else{t.classList.add("active"),this.view.removeItems("tooltip-item"),this.data.lines[e].active=!0;for(const t of i)t.style.opacity=1}this.updateLines({target:this.view.elements.chart,startPercent:this.currentStart,endPercent:this.currentEnd,drawValues:!0}),this.updateLines({target:this.view.elements.map,startPercent:0,endPercent:this.viewBoxWidth,drawValues:!1})})}dragEndListeners(){document.addEventListener("mouseup",()=>this.clearConsrolState()),document.addEventListener("touchend",()=>this.clearConsrolState())}dragStartListeners(){this.view.layoutContorls.viewRange.addEventListener("mousedown",t=>{this.controlsState.clickInitialPosition=t.clientX,this.controlsState.mapRangeClicked=!0,this.controlsState.chartMove=!0,this.controlsState.minMapViewRange=this.currentEnd-this.currentStart}),this.view.layoutContorls.viewRange.addEventListener("touchstart",t=>{this.controlsState.clickInitialPosition=t.touches[0].clientX,this.controlsState.mapRangeClicked=!0,this.controlsState.chartMove=!0,this.controlsState.minMapViewRange=this.currentEnd-this.currentStart}),this.view.layoutContorls.startChartSlider.addEventListener("mousedown",t=>{this.controlsState.clickInitialPosition=t.clientX,this.controlsState.chartMove=!0,this.controlsState.startClicked=!0}),this.view.layoutContorls.startChartSlider.addEventListener("touchstart",t=>{this.controlsState.clickInitialPosition=t.touches[0].clientX,this.controlsState.chartMove=!0,this.controlsState.startClicked=!0}),this.view.layoutContorls.endChartSlider.addEventListener("mousedown",t=>{this.controlsState.clickInitialPosition=t.clientX,this.controlsState.chartMove=!0,this.controlsState.endClicked=!0}),this.view.layoutContorls.endChartSlider.addEventListener("touchstart",t=>{this.controlsState.clickInitialPosition=t.touches[0].clientX,this.controlsState.chartMove=!0,this.controlsState.endClicked=!0})}moveListeners(){document.addEventListener("mousemove",t=>{this.moveChart(t)}),document.addEventListener("touchmove",t=>{this.moveChart(t)}),this.view.elements.chart.addEventListener("mousemove",t=>this.updateTooltip(t)),this.view.elements.chart.addEventListener("touchmove",t=>this.updateTooltip(t)),this.view.elements.chart.addEventListener("mouseleave",()=>this.view.removeItems("tooltip-item"))}clearConsrolState(){this.controlsState.startPosition=this.view.startChartValue,this.controlsState.endPosition=this.view.endChartValue,this.controlsState.minMapViewRange=this.data.settings.minMapSpace,this.controlsState.startClicked=!1,this.controlsState.endClicked=!1,this.controlsState.chartReverceMove=!1,this.controlsState.chartMove=!1,this.controlsState.mapRangeClicked=!1}}class n{constructor(t){this.chart=new r(t)}changeSetting(t,e){this.chart.data.settings[t]=e,this.chart.updateSettings()}}const l=[],h=document.createElement("a");var c;h.setAttribute("class","switch-link"),h.dataset.currentmode="day",h.innerHTML="Switch to night mode",h.addEventListener("click",t=>{const e=t.target,i=e.dataset.currentmode,s="day"===e.dataset.currentmode?"night":"day";if(l.length>0){for(const t of l)t.changeSetting("currentMode",s);e.dataset.currentmode=s,e.innerHTML=`Switch to ${i} mode`,e.style.color="night"===s?"#fff":"#333"}}),document.querySelector("body").appendChild(h),(c="data/chart_data.json",new Promise(function(t,e){const i=new XMLHttpRequest;i.onerror=(()=>{e({value:"load from file",file:"data/chart_data.js"})}),i.open("GET",c,!0),i.onload=function(){i.status>=200&&i.status<300?t(JSON.parse(i.responseText)):e("Error: HTTP status - "+i.status+" on resource "+c)},i.send()})).then(t=>{for(const e of t)l.push(new n(e))}).catch(t=>{if(void 0!==t.value&&"load from file"===t.value){const e=document.createElement("script");e.setAttribute("src",t.file),document.querySelector("body").appendChild(e);const i=setInterval(()=>{if(chartData){clearInterval(i);for(const t of chartData)l.push(new n(t))}},1)}})}]);
//# sourceMappingURL=bundle.js.map